// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no transactions should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TransactionPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Row)>
          <Col
            className="hidden-xs hidden-sm"
            lg={2}
            md={2}
          >
            Date
          </Col>
          <Col
            className="hidden-xs hidden-sm"
            lg={4}
            md={4}
          >
            Company
          </Col>
          <Col
            className="hidden-xs hidden-sm"
            lg={4}
            md={4}
          >
            Account
          </Col>
          <Styled(Col)
            lg={2}
            md={2}
            sm={12}
            xs={12}
          />
        </Styled(Row)>,
        false,
        <styled.div>
          No transactions found.
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              className="hidden-xs hidden-sm"
              lg={2}
              md={2}
            >
              Date
            </Col>,
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Company
            </Col>,
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Account
            </Col>,
            <Styled(Col)
              lg={2}
              md={2}
              sm={12}
              xs={12}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Date",
              "className": "hidden-xs hidden-sm",
              "lg": 2,
              "md": 2,
            },
            "ref": null,
            "rendered": "Date",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Company",
              "className": "hidden-xs hidden-sm",
              "lg": 4,
              "md": 4,
            },
            "ref": null,
            "rendered": "Company",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Account",
              "className": "hidden-xs hidden-sm",
              "lg": 4,
              "md": 4,
            },
            "ref": null,
            "rendered": "Account",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": null,
              "lg": 2,
              "md": 2,
              "sm": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "No transactions found.",
        },
        "ref": null,
        "rendered": "No transactions found.",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Row)>
            <Col
              className="hidden-xs hidden-sm"
              lg={2}
              md={2}
            >
              Date
            </Col>
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Company
            </Col>
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Account
            </Col>
            <Styled(Col)
              lg={2}
              md={2}
              sm={12}
              xs={12}
            />
          </Styled(Row)>,
          false,
          <styled.div>
            No transactions found.
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                className="hidden-xs hidden-sm"
                lg={2}
                md={2}
              >
                Date
              </Col>,
              <Col
                className="hidden-xs hidden-sm"
                lg={4}
                md={4}
              >
                Company
              </Col>,
              <Col
                className="hidden-xs hidden-sm"
                lg={4}
                md={4}
              >
                Account
              </Col>,
              <Styled(Col)
                lg={2}
                md={2}
                sm={12}
                xs={12}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Date",
                "className": "hidden-xs hidden-sm",
                "lg": 2,
                "md": 2,
              },
              "ref": null,
              "rendered": "Date",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Company",
                "className": "hidden-xs hidden-sm",
                "lg": 4,
                "md": 4,
              },
              "ref": null,
              "rendered": "Company",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Account",
                "className": "hidden-xs hidden-sm",
                "lg": 4,
                "md": 4,
              },
              "ref": null,
              "rendered": "Account",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": null,
                "lg": 2,
                "md": 2,
                "sm": 12,
                "xs": 12,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "No transactions found.",
          },
          "ref": null,
          "rendered": "No transactions found.",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`rendering transaction panel should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TransactionPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Styled(Row)>
          <Col
            className="hidden-xs hidden-sm"
            lg={2}
            md={2}
          >
            Date
          </Col>
          <Col
            className="hidden-xs hidden-sm"
            lg={4}
            md={4}
          >
            Company
          </Col>
          <Col
            className="hidden-xs hidden-sm"
            lg={4}
            md={4}
          >
            Account
          </Col>
          <Styled(Col)
            lg={2}
            md={2}
            sm={12}
            xs={12}
          >
            ($5.00)
          </Styled(Col)>
        </Styled(Row)>,
        <styled.div>
          <TransactionPanelRow
            transaction={
              Object {
                "Amount": "-5",
                "id": 1,
              }
            }
          />
        </styled.div>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              className="hidden-xs hidden-sm"
              lg={2}
              md={2}
            >
              Date
            </Col>,
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Company
            </Col>,
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Account
            </Col>,
            <Styled(Col)
              lg={2}
              md={2}
              sm={12}
              xs={12}
            >
              ($5.00)
            </Styled(Col)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Date",
              "className": "hidden-xs hidden-sm",
              "lg": 2,
              "md": 2,
            },
            "ref": null,
            "rendered": "Date",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Company",
              "className": "hidden-xs hidden-sm",
              "lg": 4,
              "md": 4,
            },
            "ref": null,
            "rendered": "Company",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Account",
              "className": "hidden-xs hidden-sm",
              "lg": 4,
              "md": 4,
            },
            "ref": null,
            "rendered": "Account",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "($5.00)",
              "lg": 2,
              "md": 2,
              "sm": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": "($5.00)",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TransactionPanelRow
              transaction={
                Object {
                  "Amount": "-5",
                  "id": 1,
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "transaction": Object {
                "Amount": "-5",
                "id": 1,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Styled(Row)>
            <Col
              className="hidden-xs hidden-sm"
              lg={2}
              md={2}
            >
              Date
            </Col>
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Company
            </Col>
            <Col
              className="hidden-xs hidden-sm"
              lg={4}
              md={4}
            >
              Account
            </Col>
            <Styled(Col)
              lg={2}
              md={2}
              sm={12}
              xs={12}
            >
              ($5.00)
            </Styled(Col)>
          </Styled(Row)>,
          <styled.div>
            <TransactionPanelRow
              transaction={
                Object {
                  "Amount": "-5",
                  "id": 1,
                }
              }
            />
          </styled.div>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                className="hidden-xs hidden-sm"
                lg={2}
                md={2}
              >
                Date
              </Col>,
              <Col
                className="hidden-xs hidden-sm"
                lg={4}
                md={4}
              >
                Company
              </Col>,
              <Col
                className="hidden-xs hidden-sm"
                lg={4}
                md={4}
              >
                Account
              </Col>,
              <Styled(Col)
                lg={2}
                md={2}
                sm={12}
                xs={12}
              >
                ($5.00)
              </Styled(Col)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Date",
                "className": "hidden-xs hidden-sm",
                "lg": 2,
                "md": 2,
              },
              "ref": null,
              "rendered": "Date",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Company",
                "className": "hidden-xs hidden-sm",
                "lg": 4,
                "md": 4,
              },
              "ref": null,
              "rendered": "Company",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Account",
                "className": "hidden-xs hidden-sm",
                "lg": 4,
                "md": 4,
              },
              "ref": null,
              "rendered": "Account",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "($5.00)",
                "lg": 2,
                "md": 2,
                "sm": 12,
                "xs": 12,
              },
              "ref": null,
              "rendered": "($5.00)",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TransactionPanelRow
                transaction={
                  Object {
                    "Amount": "-5",
                    "id": 1,
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "transaction": Object {
                  "Amount": "-5",
                  "id": 1,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
